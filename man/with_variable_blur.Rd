% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variable_blur.R
\name{with_variable_blur}
\alias{with_variable_blur}
\alias{with_variable_blur.grob}
\alias{with_variable_blur.Layer}
\alias{with_variable_blur.ggplot}
\alias{with_variable_blur.character}
\alias{with_variable_blur.function}
\alias{with_variable_blur.formula}
\alias{with_variable_blur.element}
\alias{with_variable_blur.guide}
\title{Apply a variable blur to a layer}
\usage{
with_variable_blur(
  x,
  x_sigma,
  y_sigma = x_sigma,
  angle = NULL,
  x_scale = 1,
  y_scale = x_scale,
  angle_range = 0,
  ...
)

\method{with_variable_blur}{grob}(
  x,
  x_sigma,
  y_sigma = x_sigma,
  angle = NULL,
  x_scale = 1,
  y_scale = x_scale,
  angle_range = 0,
  ...,
  background = NULL,
  id = NULL,
  include = is.null(id)
)

\method{with_variable_blur}{Layer}(
  x,
  x_sigma,
  y_sigma = x_sigma,
  angle = NULL,
  x_scale = 1,
  y_scale = x_scale,
  angle_range = 0,
  ...,
  id = NULL,
  include = is.null(id)
)

\method{with_variable_blur}{ggplot}(
  x,
  x_sigma,
  y_sigma = x_sigma,
  angle = NULL,
  x_scale = 1,
  y_scale = x_scale,
  angle_range = 0,
  ignore_background = TRUE,
  ...
)

\method{with_variable_blur}{character}(
  x,
  x_sigma,
  y_sigma = x_sigma,
  angle = NULL,
  x_scale = 1,
  y_scale = x_scale,
  angle_range = 0,
  ...,
  id = NULL,
  include = is.null(id)
)

\method{with_variable_blur}{`function`}(
  x,
  x_sigma,
  y_sigma = x_sigma,
  angle = NULL,
  x_scale = 1,
  y_scale = x_scale,
  angle_range = 0,
  ...,
  id = NULL,
  include = is.null(id)
)

\method{with_variable_blur}{formula}(
  x,
  x_sigma,
  y_sigma = x_sigma,
  angle = NULL,
  x_scale = 1,
  y_scale = x_scale,
  angle_range = 0,
  ...,
  id = NULL,
  include = is.null(id)
)

\method{with_variable_blur}{element}(
  x,
  x_sigma,
  y_sigma = x_sigma,
  angle = NULL,
  x_scale = 1,
  y_scale = x_scale,
  angle_range = 0,
  ...
)

\method{with_variable_blur}{guide}(
  x,
  x_sigma,
  y_sigma = x_sigma,
  angle = NULL,
  x_scale = 1,
  y_scale = x_scale,
  angle_range = 0,
  ...
)
}
\arguments{
\item{x}{A ggplot2 layer object, a ggplot, a grob, or a character string
naming a filter}

\item{x_sigma, y_sigma, alpha}{The layers to use for looking up the sigma
values and angledefining the blur ellipse at every point. Can either be a
string identifying a registered filter, or a raster object. The maps will be
resized to match the dimensions of x. Only one channel will be used - see
\link[=Channels]{the docs on channels} for info on how to set them.}

\item{x_scale, , y_scale}{Which sigma should a maximal channel value correspond
to? If a numeric it will be interpreted as pixel dimensions. If a unit object
it will be converted to pixel dimension when rendered.}

\item{...}{Arguments to be passed on to methods}

\item{background}{A grob to draw below the filtered grob.}

\item{id}{An id that can be used to reference this filter somewhere else}

\item{include}{Should the filter be part of the final render}

\item{ignore_background}{Should the filter be applied to everything except
the plot background, or should the background be included.}

\item{alpha_range}{The minimum and maximum angle that min and max in the
\code{alpha} layer should correspond to. If \code{alpha == NULL} or only a single value
is provided to \code{angle_range} the rotation will be constant across the whole
layer}
}
\value{
A modified \code{Layer} object
}
\description{
This filter will blur a layer, but in contrast to \code{\link[=with_blur]{with_blur()}} the amount
and nature of the blur need not be constant across the layer. The blurring is
based on a weighted ellipsoid, with width and height based on the values in
the corresponding \code{x_sigma} and \code{y_sigma} layers. The angle of the ellipsoid
can also be controlled and further varied based on another layer.
}
\examples{
library(ggplot2)
cos_wave <- function(dim, res) {
  x <- matrix(0, ncol = dim[1], nrow = dim[2])
  x <- cos(col(x)/100)
  as.raster((x + 1) / 2)
}
ggplot() +
  as_reference(
    cos_wave,
    id = "wave"
  ) +
  with_variable_blur(
    geom_point(aes(disp, mpg), mtcars, size = 4),
    x_sigma = ch_red("wave"),
    y_sigma = ch_alpha("wave"),
    angle = ch_red("wave"),
    x_scale = 5,
    y_scale = 5,
    angle_range = c(-45, 45)
  )

}
