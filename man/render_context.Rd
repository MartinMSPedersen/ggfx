% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/raster-helpers.R
\name{render_context}
\alias{render_context}
\alias{viewport_location}
\alias{index_raster}
\alias{get_raster_area}
\alias{set_raster_area}
\alias{get_viewport_area}
\alias{set_viewport_area}
\alias{viewport_is_clipping}
\alias{current_resolution}
\alias{as_pixels}
\alias{from_pixels}
\title{Rendering information}
\usage{
viewport_location()

index_raster(raster, cols, rows)

get_raster_area(raster, xmin, ymin, xmax, ymax)

set_raster_area(raster, value, xmin, ymin)

get_viewport_area(raster)

set_viewport_area(raster, value)

viewport_is_clipping()

current_resolution()

as_pixels(x, y_axis = FALSE, location = FALSE)

from_pixels(x)
}
\arguments{
\item{x}{A numeric or \link[grid:unit]{grid::unit} object}

\item{y_axis}{is the unit pertaining to the y-axis? Defaults to \code{FALSE} (i.e.
it is measured on the x-axis)}

\item{location}{is the unit encoding a location? Defaults to \code{FALSE} (i.e. it
is encoding a dimension). Pixel locations are encoded based on a top-left
starting point, as opposed to grid's bottom-left coordinate system. This
means that y-axis locations will flip around when converted to pixels.}
}
\value{
See details
}
\description{
These utility functions can help when creating custom filters (using
\code{\link[=with_custom]{with_custom()}}) as they can provide information about the current rendering
context.
}
\details{
\itemize{
\item \code{viewport_location()}: Returns the bounding box defining the current
viewport in pixels in the order \code{xmin}, \code{ymin}, \code{xmax}, \code{ymax}
\item \code{viewport_is_clipping()}: Returns \code{TRUE} if the current viewport has
clipping turned on
\item \code{current_resolution()}: Returns the resolution of the active device in ppi
(pixels-per-inch)
\item \code{as_pixels(x)}: Converts \code{x} to pixels if \code{x} is given as a unit object. It
is assumed that x encodes a dimension and not a location. If \code{x} is a
numeric it is assumed to already be in pixels
\item \code{from_pixels}: Converts a numeric giving some pixel dimension to a unit
object.
}
}
\keyword{internal}
